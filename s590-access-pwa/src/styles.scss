
/* Custom Styles */
$camron-blue: (
  50 : #e2ecf2,
  100 : #b7d0df,
  200 : #88b0c9,
  300 : #5890b3,
  400 : #3479a3,
  500 : #106193,
  600 : #0e598b,
  700 : #0c4f80,
  800 : #094576,
  900 : #053364,
  A100 : #95c1ff,
  A200 : #62a4ff,
  A400 : #2f86ff,
  A700 : #1578ff,
  contrast: (
      50 : #000000,
      100 : #000000,
      200 : #000000,
      300 : #000000,
      400 : #ffffff,
      500 : #ffffff,
      600 : #ffffff,
      700 : #ffffff,
      800 : #ffffff,
      900 : #ffffff,
      A100 : #000000,
      A200 : #000000,
      A400 : #ffffff,
      A700 : #ffffff,
  )
);

$camron-green: (
    50 : #e2f2ed,
    100 : #b7dfd1,
    200 : #88c9b3,
    300 : #58b394,
    400 : #34a37d,
    500 : #109366,
    600 : #0e8b5e,
    700 : #0c8053,
    800 : #097649,
    900 : #056438,
    A100 : #95ffc7,
    A200 : #62ffac,
    A400 : #2fff90,
    A700 : #15ff83,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #000000,
        400 : #ffffff,
        500 : #ffffff,
        600 : #ffffff,
        700 : #ffffff,
        800 : #ffffff,
        900 : #ffffff,
        A100 : #000000,
        A200 : #000000,
        A400 : #000000,
        A700 : #000000,
    )
);

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '~@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$s590-access-pwa-primary: mat.define-palette(mat.$indigo-palette);
$s590-access-pwa-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$s590-access-pwa-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$s590-access-pwa-theme: mat.define-light-theme((
  color: (
    primary: $s590-access-pwa-primary,
    accent: $s590-access-pwa-accent,
    warn: $s590-access-pwa-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($s590-access-pwa-theme);

/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }





/* CUSTOM SNACKBAR STYLES */

//Snackbar classes colors per https://colorswall.com/palette/3/
.mat-simple-snackbar {
  font-size: 1.2em;
  color: #f7f7f7;

  .mat-simple-snackbar-action {
      font-size: 1.2em;
      color: #f7f7f7;
  }
}

.mat-snack-bar-container {
  min-width: 90vw !important;

}

.dark-theme-mode {
  .snackbar-normal {
    background-color: #424242 !important;
  }
}
.snackbar-error {
  background-color: #d9534f !important;
}

.snackbar-success {
  background-color: #5cb85c !important;
}

.snackbar-info {
  background-color: #5bc0de !important;
}

.snackbar-warning {
  background-color: #f0ad4e !important;
}

/* CONTENT WRAPPER */
.content-container {
  padding: 15px;
  height: calc(100% - 64px); //subtract top nav for correct container size
  box-sizing: border-box;

}

.content-container-small {
  padding: 15px;
  height: calc(100% - 80px);  //subtract bottom nav for correct container size
  box-sizing: border-box;
}


/* MAIN LOADING SPINNER */
#main-loading-spinner { //Centered Spinner
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
}

/* User Profile Form Status Progress Bar */
.form-status-error .mat-progress-bar-fill::after {
  background-color: #d9534f !important;
}

.form-status-loading .mat-progress-bar-fill::after {
  background-color: #d3d3d3 !important;
}

.form-status-synced .mat-progress-bar-fill::after {
  background-color: #5cb85c !important;
}

.form-status-modified .mat-progress-bar-fill::after {
  background-color: #f0ad4e !important;
}

.form-status-modified .mat-progress-bar-buffer {
  background-color: #F8D9AD !important;
}


// Working on the toggle
.background {
  height: 100%;
  //background: orange;
}

@media (prefers-color-scheme: light) { //NEEDED FOR SYSTEM DEFAULT JS QUERY TO WORK (NAV COMPONENT)

}
@media (prefers-color-scheme: dark) { //NEEDED FOR SYSTEM DEFAULT JS QUERY TO WORK (NAV COMPONENT)

}

/* DARK MODE FIXES */
@import "~@angular/material/theming";
.dark-theme-mode .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {
  color: mat-color($camron-blue, A100);
}

.dark-theme-mode .dark-card-background { //I'm going to have to do this a lot.
  background: #424242;
}
